version: 1.0.0
services:
  - mysql

variables:
  global:
    COMPOSER_BIN: $BUILD_DIR/vendor/bin
    BLT_DIR: $BUILD_DIR/vendor/acquia/blt

events:
  build:
    steps:
        # Install global packages and set global configuration.
        - setup:
            type: script
            script:
              - cd $BUILD_DIR
              - composer install
              - source ${BLT_DIR}/scripts/pipelines/setup_environment
              - source ${BLT_DIR}/scripts/pipelines/setup_project
              - composer install-phantomjs

        # Install Lightning and copy prod database.
        - install:
            type: script
            script:
              - cd $BUILD_DIR/docroot

              # Install Lightning from scratch first so our settings file gets
              # the correct DB connection details for the test env.
              - /usr/bin/env PHP_OPTIONS="-d sendmail_path=`which true`" ../vendor/bin/drush site-install lightning --db-url=mysql://root:root@127.0.0.1/drupal --yes

              # Then copy the prod database over.
              - ../vendor/bin/drush --alias-path=../drush sql-sync @speedrun.prod default --yes
              - ../vendor/bin/drush updatedb --yes
              - ../vendor/bin/drush cache-rebuild

              # Run a config import to get any new config changes from code.
              - ../vendor/bin/drush config-import --yes --config=../config/default

        # Generate behat config
        - configure:
            type: script
            script:
              - cd $BUILD_DIR
              - blt behat-generate

        # Execute all testing and validation tasks.
        - run-tests:
            type: script
            script:
              - cd $BUILD_DIR/docroot
              - ../vendor/bin/drush runserver --default-server=builtin 8080 &>/dev/null &
              - ../vendor/bin/phantomjs --webdriver=4444 > /dev/null &
              - sleep 10
              # Run a specific Lightning test:
              # - Panelizer is enabled for landing pages (1e244c89)
              - ../vendor/bin/behat --config ./sites/default/files/behat.yml --tags=1e244c89

        # Generate artifact.
        - build-artifact:
            type: script
            script:
              - source ${BLT_DIR}/scripts/pipelines/build_artifact

        # Deploy the build artifact to a Cloud on-demand environment.
        - deploy:
            script:
              - pipelines-deploy

  # When a GitHub pull request is merged, this deletes the corresponding ODE.
  pr-merged:
    steps:
        - deploy:
            script:
              - pipelines-deploy

  # When a GitHub pull request is closed, this deletes the corresponding ODE.
  pr-closed:
    steps:
        - deploy:
            script:
              - pipelines-deploy
ssh-keys:
  drush-key:
    secure: YOUR DRUSH KEY 